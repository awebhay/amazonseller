{"version":3,"sources":["document/ingredients/browser-compatibility-table/browser-info.tsx","document/ingredients/browser-compatibility-table/error-boundary.tsx","document/ingredients/browser-compatibility-table/utils.ts","document/ingredients/browser-compatibility-table/feature-row.tsx","document/ingredients/browser-compatibility-table/headers.tsx","document/ingredients/browser-compatibility-table/legend.tsx","document/ingredients/browser-compatibility-table/index.tsx","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js"],"names":["BrowserInfoContext","React","createContext","BrowserName","id","browserInfo","useContext","Error","name","BrowserCompatibilityErrorBoundary","state","error","_errorInfo","this","setState","className","props","children","Component","getFirst","a","Array","isArray","asList","isTruthy","t","Boolean","listFeatures","identifier","parentName","rootName","features","__compat","push","compat","isRoot","Object","entries","subName","subIdentifier","getSupportClassName","support","flags","version_added","version_removed","partial_implementation","length","StatusIcons","status","icons","experimental","title","text","iconClassName","deprecated","standard_track","filter","map","icon","NonBreakingSpace","labelFromString","version","startsWith","slice","CellText","memo","label","currentSupport","added","removed","isSupported","Icon","CellIcons","supportItem","prefix","notes","alternative_name","FlagsNote","browser","info","hasAddedVersion","hasRemovedVersion","flag","i","valueToSet","value_to_set","Fragment","type","pref_url","some","getNotes","locale","flatMap","item","supportNotes","iconName","note","flat","hasNotes","dangerouslySetInnerHTML","__html","CompatCell","showNotes","onToggle","supportClassName","browserReleaseDate","release_date","getSupportBrowserReleaseDate","aria-expanded","tabIndex","undefined","onClick","aria-hidden","FeatureRow","titleNode","index","feature","browsers","activeCell","onToggleCell","description","activeBrowser","bad_url","mdn_url","href","scope","colSpan","PLATFORM_BROWSERS","desktop","mobile","server","PlatformHeaders","platforms","platform","platformCount","keys","platformId","replace","BrowserHeaders","Headers","LEGEND_LABELS","yes","partial","no","unknown","footnote","disabled","altname","getActiveLegendItems","legendItems","Set","add","values","browserSupport","versionSupport","key","has","Legend","includes","FeatureListAccordion","useReducer","activeRow","activeColumn","row","column","dispatchCellToggle","BrowserCompatibilityTable","query","data","location","useLocation","breadcrumbs","split","category","gatherPlatformsAndBrowsers","Provider","value","sp","URLSearchParams","body","pathname","Date","toISOString","trim","set","toString","getNewIssueURL","target","rel","_classCallCheck","instance","Constructor","TypeError","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","call","e","_inherits","subClass","superClass","create","constructor","_typeof","obj","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","arguments","apply"],"mappings":"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","file":"static/js/5.354786c8.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport type bcd from \"@mdn/browser-compat-data/types\";\n\nexport const BrowserInfoContext = React.createContext<bcd.Browsers | null>(\n  null\n);\n\nexport function BrowserName({ id }: { id: bcd.BrowserNames }) {\n  const browserInfo = useContext(BrowserInfoContext);\n  if (!browserInfo) {\n    throw new Error(\"Missing browser info\");\n  }\n  return <>{browserInfo[id].name}</>;\n}\n","import React from \"react\";\n\n/**\n * The error boundary for BrowserCompatibilityTable.\n *\n * When the whole BrowserCompatibilityTable crashes, for whatever reason,\n * this component will show a friendly message\n * to replace that crashed component\n */\nexport class BrowserCompatibilityErrorBoundary extends React.Component<\n  any,\n  any\n> {\n  state = {\n    error: null,\n  };\n  componentDidCatch(error, _errorInfo) {\n    this.setState({\n      error,\n    });\n    // TODO: Report this error to Sentry, https://github.com/mdn/yari/issues/99\n  }\n  render() {\n    if (this.state.error) {\n      return (\n        <>\n          <div className=\"bc-table-error-boundary\">\n            Unfortunately, this table has encountered unhandled error and the\n            content cannot be shown.\n            {/* TODO: When error reporting is set up, the message should include \"We have been notified of this error\" or something similar */}\n          </div>\n        </>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import type bcd from \"@mdn/browser-compat-data/types\";\n\nexport function getFirst<T>(a: T | T[]): T;\nexport function getFirst<T>(a: T | T[] | undefined): T | undefined {\n  return Array.isArray(a) ? a[0] : a;\n}\n\nexport function asList<T>(a: T | T[]): T[] {\n  return Array.isArray(a) ? a : [a];\n}\n\nexport function isTruthy<T>(t: T | false | undefined | null): t is T {\n  return Boolean(t);\n}\n\ninterface Feature {\n  name: string;\n  compat: bcd.CompatStatement;\n  isRoot: boolean;\n}\n\nexport function listFeatures(\n  identifier: bcd.Identifier,\n  parentName: string = \"\",\n  rootName: string = \"\"\n): Feature[] {\n  const features: Feature[] = [];\n  if (rootName && identifier.__compat) {\n    features.push({\n      name: rootName,\n      compat: identifier.__compat,\n      isRoot: true,\n    });\n  }\n\n  for (const [subName, subIdentifier] of Object.entries(identifier)) {\n    if (subName !== \"__compat\" && subIdentifier.__compat) {\n      features.push({\n        name: parentName ? `${parentName}.${subName}` : subName,\n        compat: subIdentifier.__compat,\n        isRoot: parentName !== \"\",\n      });\n      features.push(...listFeatures(subIdentifier, subName));\n    }\n  }\n  return features;\n}\n","import React, { useContext } from \"react\";\nimport type bcd from \"@mdn/browser-compat-data/types\";\nimport { BrowserInfoContext, BrowserName } from \"./browser-info\";\nimport { asList, getFirst, isTruthy } from \"./utils\";\n\n// Yari builder will attach extra keys from the compat data\n// it gets from @mdn/browser-compat-data. These are \"Yari'esque\"\n// extras that helps us avoiding to have a separate data structure.\ninterface CompatStatementExtended extends bcd.CompatStatement {\n  // When a compat statement has a .mdn_url but it's actually not a good\n  // one, the Yari builder will attach an extra boolean that indicates\n  // that it's not a valid link.\n  // Note, it's only 'true' if it's present, hence this interface definition.\n  bad_url?: true;\n}\n\n// Extended for the fields, beyond the bcd types, that are extra-added\n// exclusively in Yari.\ninterface SimpleSupportStatementExtended extends bcd.SimpleSupportStatement {\n  // Known for some support statements where the browser *version* is known,\n  // as opposed to just \"true\" and if the version release date is known.\n  release_date?: string;\n}\n\ntype SupportStatementExtended =\n  | SimpleSupportStatementExtended\n  | SimpleSupportStatementExtended[];\n\nfunction getSupportClassName(\n  support: SupportStatementExtended | undefined\n): string {\n  if (!support) {\n    return \"unknown\";\n  }\n\n  let {\n    flags,\n    version_added,\n    version_removed,\n    partial_implementation,\n  } = getFirst(support);\n\n  let className;\n  if (version_added === null) {\n    className = \"unknown\";\n  } else if (version_added) {\n    className = \"yes\";\n    if (version_removed || (flags && flags.length)) {\n      className = \"no\";\n    }\n  } else {\n    className = \"no\";\n  }\n  if (partial_implementation && !version_removed) {\n    className = \"partial\";\n  }\n\n  return className;\n}\n\nfunction getSupportBrowserReleaseDate(\n  support: SupportStatementExtended | undefined\n): string | undefined {\n  if (!support) {\n    return undefined;\n  }\n  return getFirst(support).release_date;\n}\n\nfunction StatusIcons({ status }: { status: bcd.StatusBlock }) {\n  const icons = [\n    status.experimental && {\n      title: \"Experimental. Expect behavior to change in the future.\",\n      text: \"Experimental\",\n      iconClassName: \"ic-experimental\",\n    },\n    status.deprecated && {\n      title: \"Deprecated. Not for use in new websites.\",\n      text: \"Deprecated\",\n      iconClassName: \"ic-deprecated\",\n    },\n    !status.standard_track && {\n      title: \"Non-standard. Expect poor cross-browser support.\",\n      text: \"Non-standard\",\n      iconClassName: \"ic-non-standard\",\n    },\n  ].filter(isTruthy);\n  return icons.length === 0 ? null : (\n    <div className=\"bc-icons\">\n      {icons.map((icon) => (\n        <abbr key={icon.iconClassName} className=\"only-icon\" title={icon.title}>\n          <span>{icon.text}</span>\n          <i className={icon.iconClassName} />\n        </abbr>\n      ))}\n    </div>\n  );\n}\n\nfunction NonBreakingSpace() {\n  return <>{\"\\u00A0\"}</>;\n}\n\nfunction labelFromString(version: string | boolean | null | undefined) {\n  if (typeof version !== \"string\") {\n    return <>{\"?\"}</>;\n  }\n  if (!version.startsWith(\"≤\")) {\n    return <>{version}</>;\n  }\n  const title = `Supported in version ${version.slice(1)} or earlier.`;\n  return (\n    <span title={title}>\n      <sup>≤&#xA0;</sup>\n      {version.slice(1)}\n    </span>\n  );\n}\n\nconst CellText = React.memo(\n  ({ support }: { support: bcd.SupportStatement | undefined }) => {\n    const currentSupport = getFirst(support);\n\n    const added = currentSupport && currentSupport.version_added;\n    const removed = currentSupport && currentSupport.version_removed;\n\n    let status:\n      | { isSupported: \"unknown\" }\n      | { isSupported: \"no\" | \"yes\" | \"partial\"; label?: React.ReactNode };\n\n    switch (added) {\n      case null:\n        status = { isSupported: \"unknown\" };\n        break;\n      case true:\n        status = { isSupported: \"yes\" };\n        break;\n      case false:\n        status = { isSupported: \"no\" };\n        break;\n      default:\n        status = { isSupported: \"yes\", label: labelFromString(added) };\n        break;\n    }\n\n    if (removed) {\n      status = {\n        isSupported: \"no\",\n        label: (\n          <>\n            {labelFromString(added)}\n            <NonBreakingSpace />— {labelFromString(removed)}\n          </>\n        ),\n      };\n    } else if (currentSupport && currentSupport.partial_implementation) {\n      status = {\n        isSupported: \"partial\",\n        label: typeof added === \"string\" ? labelFromString(added) : \"Partial\",\n      };\n    }\n\n    let label: string | React.ReactNode;\n    let title = \"\";\n    switch (status.isSupported) {\n      case \"yes\":\n        title = \"Full support\";\n        label = status.label || \"Yes\";\n        break;\n\n      case \"partial\":\n        title = \"Partial support\";\n        label = status.label || \"Partial\";\n        break;\n\n      case \"no\":\n        title = \"No support\";\n        label = status.label || \"No\";\n        break;\n\n      case \"unknown\":\n        title = \"Compatibility unknown; please update this.\";\n        label = \"?\";\n        break;\n    }\n\n    return (\n      <>\n        <abbr\n          className={`bc-level-${getSupportClassName(\n            currentSupport\n          )} only-icon`}\n          title={title}\n        >\n          <span>{title}</span>\n        </abbr>\n        {label}\n      </>\n    );\n  }\n);\n\nfunction Icon({ name }: { name: string }) {\n  return (\n    <abbr className=\"only-icon\" title={name}>\n      <span>{name}</span>\n      <i className={`ic-${name}`} />\n    </abbr>\n  );\n}\n\nfunction CellIcons({ support }: { support: bcd.SupportStatement | undefined }) {\n  const supportItem = getFirst(support);\n  if (!supportItem) {\n    return null;\n  }\n  return (\n    <div className=\"bc-icons\">\n      {supportItem.prefix && <Icon name=\"prefix\" />}\n      {supportItem.notes && <Icon name=\"footnote\" />}\n      {supportItem.alternative_name && <Icon name=\"altname\" />}\n      {supportItem.flags && <Icon name=\"disabled\" />}\n    </div>\n  );\n}\n\nfunction FlagsNote({\n  supportItem,\n  browser,\n}: {\n  supportItem: bcd.SimpleSupportStatement;\n  browser: bcd.BrowserNames;\n}) {\n  const browserInfo = useContext(BrowserInfoContext);\n  if (!browserInfo) {\n    throw new Error(\"Missing browser info\");\n  }\n  const info = browserInfo[browser];\n\n  const hasAddedVersion = typeof supportItem.version_added === \"string\";\n  const hasRemovedVersion = typeof supportItem.version_removed === \"string\";\n  const flags = supportItem.flags || [];\n  return (\n    <>\n      {hasAddedVersion && `From version ${supportItem.version_added}`}\n      {hasRemovedVersion && (\n        <>\n          {hasAddedVersion ? \" until\" : \"Until\"} version{\" \"}\n          {supportItem.version_removed} (exclusive)\n        </>\n      )}\n      {hasAddedVersion || hasRemovedVersion ? \": this\" : \"This\"} feature is\n      behind the\n      {flags.map((flag, i) => {\n        const valueToSet = flag.value_to_set && (\n          <>\n            {\" \"}\n            (needs to be set to <code>{flag.value_to_set}</code>)\n          </>\n        );\n        return (\n          <React.Fragment key={flag.name}>\n            <code>{flag.name}</code>\n            {flag.type === \"preference\" && <> preferences{valueToSet}</>}\n            {flag.type === \"runtime_flag\" && <> runtime flag{valueToSet}</>}\n            {i < flags.length - 1 && \" and the \"}\n          </React.Fragment>\n        );\n      })}\n      .\n      {info.pref_url &&\n        flags.some((flag) => flag.type === \"preference\") &&\n        ` To change preferences in ${info.name}, visit ${info.pref_url}.`}\n    </>\n  );\n}\n\nfunction getNotes(\n  browser: bcd.BrowserNames,\n  support: bcd.SupportStatement,\n  locale: string\n) {\n  return asList(support)\n    .flatMap((item, i) => {\n      const supportNotes = [\n        item.prefix\n          ? {\n              iconName: \"prefix\",\n              label: `Implemented with the vendor prefix: ${item.prefix}`,\n            }\n          : null,\n        item.notes\n          ? (Array.isArray(item.notes)\n              ? item.notes\n              : [item.notes]\n            ).map((note) => ({ iconName: \"footnote\", label: note }))\n          : null,\n        item.alternative_name\n          ? {\n              iconName: \"altname\",\n              label: item.alternative_name,\n            }\n          : null,\n        item.flags\n          ? {\n              iconName: \"disabled\",\n              label: <FlagsNote browser={browser} supportItem={item} />,\n            }\n          : null,\n      ]\n        .flat()\n        .filter(isTruthy);\n\n      const hasNotes = supportNotes.length > 0;\n      return (\n        (i === 0 || hasNotes) && (\n          <React.Fragment key={i}>\n            <div className=\"bc-notes-wrapper\">\n              <dt\n                className={`bc-supports-${getSupportClassName(\n                  item\n                )} bc-supports`}\n              >\n                <CellText support={item} />\n                <CellIcons support={item} />\n              </dt>\n              {supportNotes.map(({ iconName, label }, i) => {\n                return (\n                  <dd key={i}>\n                    <Icon name={iconName} />{\" \"}\n                    {typeof label === \"string\" ? (\n                      <span dangerouslySetInnerHTML={{ __html: label }} />\n                    ) : (\n                      label\n                    )}\n                  </dd>\n                );\n              })}\n              {!hasNotes && <dd />}\n            </div>\n          </React.Fragment>\n        )\n      );\n    })\n    .filter(isTruthy);\n}\n\nfunction CompatCell({\n  browser,\n  support,\n  showNotes,\n  onToggle,\n  locale,\n}: {\n  browser: bcd.BrowserNames;\n  support: bcd.SupportStatement | undefined;\n  showNotes: boolean;\n  onToggle: () => void;\n  locale: string;\n}) {\n  const supportClassName = getSupportClassName(support);\n  const browserReleaseDate = getSupportBrowserReleaseDate(support);\n  const hasNotes =\n    support &&\n    asList(support).some(\n      (item) => item.prefix || item.notes || item.alternative_name || item.flags\n    );\n  return (\n    <>\n      <td\n        className={`bc-browser-${browser} bc-supports-${supportClassName} ${\n          hasNotes ? \"bc-has-history\" : \"\"\n        }`}\n        aria-expanded={showNotes ? \"true\" : \"false\"}\n        tabIndex={hasNotes ? 0 : undefined}\n        onClick={\n          hasNotes\n            ? () => {\n                onToggle();\n              }\n            : undefined\n        }\n        title={\n          browserReleaseDate ? `Released ${browserReleaseDate}` : undefined\n        }\n      >\n        <span className=\"bc-browser-name\">\n          <BrowserName id={browser} />\n        </span>\n        <CellText {...{ support }} />\n        <CellIcons support={support} />\n        {hasNotes && (\n          <button\n            type=\"button\"\n            title=\"Open implementation notes\"\n            className={`bc-history-link only-icon ${\n              showNotes ? \"bc-history-link-inverse\" : \"\"\n            }`}\n          >\n            <span>Open</span>\n            <i className=\"ic-history\" aria-hidden=\"true\" />\n          </button>\n        )}\n        {showNotes && (\n          <dl className=\"bc-history bc-history-mobile\">\n            {getNotes(browser, support!, locale)}\n          </dl>\n        )}\n      </td>\n    </>\n  );\n}\n\nexport const FeatureRow = React.memo(\n  ({\n    index,\n    feature,\n    browsers,\n    activeCell,\n    onToggleCell,\n    locale,\n  }: {\n    index: number;\n    feature: {\n      name: string;\n      compat: CompatStatementExtended;\n      isRoot: boolean;\n    };\n    browsers: bcd.BrowserNames[];\n    activeCell: number | null;\n    onToggleCell: ([row, column]: [number, number]) => void;\n    locale: string;\n  }) => {\n    const { name, compat, isRoot } = feature;\n    const title = compat.description ? (\n      <span dangerouslySetInnerHTML={{ __html: compat.description }} />\n    ) : (\n      <code>{name}</code>\n    );\n    const activeBrowser = activeCell !== null ? browsers[activeCell] : null;\n\n    let titleNode: string | React.ReactNode;\n\n    if (compat.bad_url && compat.mdn_url) {\n      titleNode = (\n        <div className=\"bc-table-row-header\">\n          <abbr className=\"new\" title={`${compat.mdn_url} does not exist`}>\n            {title}\n          </abbr>\n          {compat.status && <StatusIcons status={compat.status} />}\n        </div>\n      );\n    } else if (compat.mdn_url && !isRoot) {\n      titleNode = (\n        <a href={compat.mdn_url} className=\"bc-table-row-header\">\n          {title}\n          {compat.status && <StatusIcons status={compat.status} />}\n        </a>\n      );\n    } else {\n      titleNode = (\n        <div className=\"bc-table-row-header\">\n          {title}\n          {compat.status && <StatusIcons status={compat.status} />}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <tr>\n          <th scope=\"row\">{titleNode}</th>\n          {browsers.map((browser, i) => (\n            <CompatCell\n              key={browser}\n              browser={browser}\n              support={compat.support[browser]}\n              showNotes={activeCell === i}\n              onToggle={() => onToggleCell([index, i])}\n              locale={locale}\n            />\n          ))}\n        </tr>\n        {activeBrowser && (\n          <tr className=\"bc-history\">\n            <td colSpan={browsers.length + 1}>\n              <dl>\n                {getNotes(\n                  activeBrowser,\n                  compat.support[activeBrowser]!,\n                  locale\n                )}\n              </dl>\n            </td>\n          </tr>\n        )}\n      </>\n    );\n  }\n);\n","import type bcd from \"@mdn/browser-compat-data/types\";\nimport { BrowserName } from \"./browser-info\";\n\nexport const PLATFORM_BROWSERS: { [key: string]: bcd.BrowserNames[] } = {\n  desktop: [\"chrome\", \"edge\", \"firefox\", \"ie\", \"opera\", \"safari\"],\n  mobile: [\n    \"webview_android\",\n    \"chrome_android\",\n    \"firefox_android\",\n    \"opera_android\",\n    \"safari_ios\",\n    \"samsunginternet_android\",\n  ],\n  server: [\"nodejs\"],\n  \"webextensions-desktop\": [\"chrome\", \"edge\", \"firefox\", \"opera\", \"safari\"],\n  \"webextensions-mobile\": [\"firefox_android\"],\n};\n\nfunction PlatformHeaders({ platforms }) {\n  return (\n    <tr className=\"bc-platforms\">\n      <td />\n      {platforms.map((platform) => {\n        const platformCount = Object.keys(PLATFORM_BROWSERS[platform]).length;\n        const platformId = platform.replace(\"webextensions-\", \"\");\n        return (\n          <th\n            key={platform}\n            className={`bc-platform-${platformId}`}\n            colSpan={platformCount}\n          >\n            <span>{platform}</span>\n          </th>\n        );\n      })}\n    </tr>\n  );\n}\n\nfunction BrowserHeaders({ browsers }: { browsers }) {\n  return (\n    <tr className=\"bc-browsers\">\n      <td />\n      {browsers.map((browser) => (\n        <th key={browser} className={`bc-browser-${browser}`}>\n          <span className={`bc-head-txt-label bc-head-icon-${browser}`}>\n            <BrowserName id={browser} />\n          </span>\n        </th>\n      ))}\n    </tr>\n  );\n}\n\nexport function Headers({ platforms, browsers }) {\n  return (\n    <thead>\n      <PlatformHeaders platforms={platforms} />\n      <BrowserHeaders browsers={browsers} />\n    </thead>\n  );\n}\n","import type bcd from \"@mdn/browser-compat-data/types\";\nimport { asList, listFeatures } from \"./utils\";\n\n// Also specifies the order in which the legend appears\nconst LEGEND_LABELS = {\n  yes: \"Full support\",\n  partial: \"Partial support\",\n  no: \"No support\",\n  unknown: \"Compatibility unknown\",\n  experimental: \"Experimental. Expect behavior to change in the future.\",\n  \"non-standard\": \"Non-standard. Check cross-browser support before using.\",\n  deprecated: \"Deprecated. Not for use in new websites.\",\n  footnote: \"See implementation notes.\",\n  disabled: \"User must explicitly enable this feature.\",\n  altname: \"Uses a non-standard name.\",\n  prefix: \"Requires a vendor prefix or different name for use.\",\n};\ntype LEGEND_KEY = keyof typeof LEGEND_LABELS;\n\nfunction getActiveLegendItems(compat: bcd.Identifier, name: string) {\n  const legendItems = new Set<LEGEND_KEY>();\n\n  for (const feature of listFeatures(compat, \"\", name)) {\n    const { status } = feature.compat;\n\n    if (status) {\n      if (status.experimental) {\n        legendItems.add(\"experimental\");\n      }\n      if (status.deprecated) {\n        legendItems.add(\"deprecated\");\n      }\n      if (!status.standard_track) {\n        legendItems.add(\"non-standard\");\n      }\n    }\n\n    for (const browserSupport of Object.values(feature.compat.support)) {\n      if (!browserSupport) {\n        legendItems.add(\"no\");\n        continue;\n      }\n\n      for (const versionSupport of asList(browserSupport)) {\n        if (versionSupport.version_added) {\n          if (versionSupport.flags && versionSupport.flags.length) {\n            legendItems.add(\"no\");\n          } else {\n            legendItems.add(\"yes\");\n          }\n        } else if (versionSupport.version_added == null) {\n          legendItems.add(\"unknown\");\n        } else {\n          legendItems.add(\"no\");\n        }\n\n        if (versionSupport.partial_implementation) {\n          legendItems.add(\"partial\");\n        }\n        if (versionSupport.prefix) {\n          legendItems.add(\"prefix\");\n        }\n        if (versionSupport.notes) {\n          legendItems.add(\"footnote\");\n        }\n        if (versionSupport.alternative_name) {\n          legendItems.add(\"altname\");\n        }\n        if (versionSupport.flags) {\n          legendItems.add(\"disabled\");\n        }\n      }\n    }\n  }\n  return Object.keys(LEGEND_LABELS)\n    .filter((key) => legendItems.has(key as LEGEND_KEY))\n    .map((key) => [key, LEGEND_LABELS[key]]);\n}\n\nexport function Legend({\n  compat,\n  name,\n}: {\n  compat: bcd.Identifier;\n  name: string;\n}) {\n  return (\n    <section className=\"bc-legend\">\n      <h3 className=\"visually-hidden\" id=\"Legend\">\n        Legend\n      </h3>\n      <dl className=\"bc-legend-items-container\">\n        {getActiveLegendItems(compat, name).map(([key, label]) =>\n          [\"yes\", \"partial\", \"no\", \"unknown\"].includes(key) ? (\n            <div className=\"bc-legend-item\" key={key}>\n              <dt key={key}>\n                <span className={`bc-supports-${key} bc-supports`}>\n                  <abbr\n                    className={`bc-level bc-level-${key} only-icon`}\n                    title={label}\n                  >\n                    <span>{label}</span>\n                  </abbr>\n                </span>\n              </dt>\n              <dd>{label}</dd>\n            </div>\n          ) : (\n            <div className=\"bc-legend-item\" key={key}>\n              <dt>\n                <abbr\n                  className={`only-icon legend-icons ic-${key}`}\n                  title={label}\n                ></abbr>\n              </dt>\n              <dd>{label}</dd>\n            </div>\n          )\n        )}\n      </dl>\n    </section>\n  );\n}\n","import React, { useReducer } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport type bcd from \"@mdn/browser-compat-data/types\";\nimport { BrowserInfoContext } from \"./browser-info\";\nimport { BrowserCompatibilityErrorBoundary } from \"./error-boundary\";\nimport { FeatureRow } from \"./feature-row\";\nimport { PLATFORM_BROWSERS, Headers } from \"./headers\";\nimport { Legend } from \"./legend\";\nimport { listFeatures } from \"./utils\";\n\n// Note! Don't import any SCSS here inside *this* component.\n// It's done in the component that lazy-loads this component.\n\n// This string is used to prefill the body when clicking to file a new BCD\n// issue over on github.com/mdn/browser-compat-data\nconst NEW_ISSUE_TEMPLATE = `\n<!-- Tips: where applicable, specify browser name, browser version, and mobile operating system version -->\n\n#### What information was incorrect, unhelpful, or incomplete?\n\n#### What did you expect to see?\n\n#### Did you test this? If so, how?\n\n\n<!-- Do not make changes below this line -->\n<details>\n<summary>MDN page report details</summary>\n\n* Query: \\`$QUERY_ID\\`\n* MDN URL: https://developer.mozilla.org$PATHNAME\n* Report started: $DATE\n\n</details>\n`;\n\nfunction gatherPlatformsAndBrowsers(\n  category: string\n): [string[], bcd.BrowserNames[]] {\n  let platforms = [\"desktop\", \"mobile\"];\n  if (category === \"javascript\") {\n    platforms.push(\"server\");\n  } else if (category === \"webextensions\") {\n    platforms = [\"webextensions-desktop\", \"webextensions-mobile\"];\n  }\n  return [\n    platforms,\n    platforms.map((platform) => PLATFORM_BROWSERS[platform] || []).flat(),\n  ];\n}\n\ntype CellIndex = [number, number];\n\nfunction FeatureListAccordion({\n  features,\n  browsers,\n  locale,\n}: {\n  features: ReturnType<typeof listFeatures>;\n  browsers: bcd.BrowserNames[];\n  locale: string;\n}) {\n  const [[activeRow, activeColumn], dispatchCellToggle] = useReducer<\n    React.Reducer<CellIndex | [null, null], CellIndex>\n  >(\n    ([activeRow, activeColumn], [row, column]) =>\n      activeRow === row && activeColumn === column\n        ? [null, null]\n        : [row, column],\n    [null, null]\n  );\n\n  return (\n    <>\n      {features.map((feature, i) => (\n        <FeatureRow\n          key={i}\n          {...{ feature, browsers }}\n          index={i}\n          activeCell={activeRow === i ? activeColumn : null}\n          onToggleCell={([row, column]: [number, number]) => {\n            dispatchCellToggle([row, column]);\n          }}\n          locale={locale}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default function BrowserCompatibilityTable({\n  query,\n  data,\n  browsers: browserInfo,\n  locale,\n}: {\n  query: string;\n  data: bcd.Identifier;\n  browsers: bcd.Browsers;\n  locale: string;\n}) {\n  const location = useLocation();\n\n  if (!data || !Object.keys(data).length) {\n    throw new Error(\n      \"BrowserCompatibilityTable component called with empty data\"\n    );\n  }\n\n  const breadcrumbs = query.split(\".\");\n  const category = breadcrumbs[0];\n  const name = breadcrumbs[breadcrumbs.length - 1];\n\n  const [platforms, browsers] = gatherPlatformsAndBrowsers(category);\n\n  function getNewIssueURL() {\n    const url = \"https://github.com/mdn/browser-compat-data/issues/new\";\n    const sp = new URLSearchParams();\n    const body = NEW_ISSUE_TEMPLATE.replace(/\\$PATHNAME/g, location.pathname)\n      .replace(/\\$DATE/g, new Date().toISOString())\n      .replace(/\\$QUERY_ID/g, query)\n      .trim();\n    sp.set(\"body\", body);\n    sp.set(\"title\", `${query} - <PUT TITLE HERE>`);\n    return `${url}?${sp.toString()}`;\n  }\n\n  return (\n    <BrowserCompatibilityErrorBoundary>\n      <BrowserInfoContext.Provider value={browserInfo}>\n        <a\n          className=\"bc-github-link external external-icon\"\n          href={getNewIssueURL()}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Report an issue with this compatibility data\"\n        >\n          Report problems with this compatibility data on GitHub\n        </a>\n        <table key=\"bc-table\" className=\"bc-table bc-table-web\">\n          <Headers {...{ platforms, browsers }} />\n          <tbody>\n            <FeatureListAccordion\n              browsers={browsers}\n              features={listFeatures(data, \"\", name)}\n              locale={locale}\n            />\n          </tbody>\n        </table>\n        <Legend compat={data} name={name} />\n\n        {/* https://github.com/mdn/yari/issues/1191 */}\n        <div className=\"hidden\">\n          The compatibility table on this page is generated from structured\n          data. If you'd like to contribute to the data, please check out{\" \"}\n          <a href=\"https://github.com/mdn/browser-compat-data\">\n            https://github.com/mdn/browser-compat-data\n          </a>{\" \"}\n          and send us a pull request.\n        </div>\n      </BrowserInfoContext.Provider>\n    </BrowserCompatibilityErrorBoundary>\n  );\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}"],"sourceRoot":""}